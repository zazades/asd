local ByteNet = game.ReplicatedStorage.Modules.ByteNet -- path to bytenet module

local packetIDs = require(ByteNet.namespaces.packetIDs)
local bufferWriter = require(ByteNet.process.bufferWriter)

local ref = packetIDs.ref()
local old = bufferWriter.export

bufferWriter.export = function(result)
    print(result)
    local Results = old()
    local len = buffer.len(Results.buff)
    local Count = 0
    while Count < len do
        local packet = ref[buffer.readu8(Results.buff, Count)]
        Count = Count + 1
        if (packet and packet.reader ~= nil) then
            local data,length = packet.reader(Results.buff, Count)
            if data then
                Count = Count + length
                print(`Packet Name: {getPacketName(packet)}`)
                print(`Packet Data: \n{string.rep(" ",12)}{stringify(data,4,false,4)}`)
            end
        end
    end
    return Results
end
